{"version":3,"file":"static/js/190.8ee20ec0.chunk.js","mappings":"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","sources":["webpack://ffx-monster-arena/./src/routes/location-details/_components/style.module.scss?1644","components/accordion/index.tsx","webpack://ffx-monster-arena/./src/components/accordion/style.module.scss?0f48","components/accordion/accordion-item.tsx","routes/location-details/_components/enemy-information.tsx","routes/location-details/_components/enemy.tsx","routes/location-details/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"enemy\":\"style_enemy__4-XEq\",\"misplaced\":\"style_misplaced__1L5Cy\",\"check\":\"style_check__u+v62\",\"portrait\":\"style_portrait__Jrwlq\",\"information\":\"style_information__yZ2PG\",\"killcount\":\"style_killcount__wH8fw\",\"minusButton\":\"style_minusButton__9zv7h\",\"plusButton\":\"style_plusButton__zb7mu\",\"progress\":\"style_progress__nCasB\",\"label\":\"style_label__JhjEf\",\"infoModal\":\"style_infoModal__CJv0k\",\"header\":\"style_header__rplfT\",\"sectionInformation\":\"style_sectionInformation__xfZGA\",\"sectionDescription\":\"style_sectionDescription__yos-I\"};","import React, { FC, PropsWithChildren, useMemo, useState } from 'react';\n\ninterface Prop extends PropsWithChildren {\n  defaultItem?: string;\n}\n\ninterface AccordionContextType {\n  active: string[];\n  toggleActive: (key: string) => void;\n}\n\nexport const AccordionContext = React.createContext<AccordionContextType>({\n  active: [],\n  toggleActive: () => {}\n});\n\nconst Accordion: FC<Prop> = ({ defaultItem, children }) => {\n  const [active, setActive] = useState(defaultItem ? [defaultItem] : []);\n  const toggleActive = useMemo(() => {\n    return (key: string) => setActive((current) => (current.includes(key) ? current.filter((id) => id !== key) : [...current, key]));\n  }, [setActive]);\n\n  return <AccordionContext.Provider value={{ active, toggleActive }}>{children}</AccordionContext.Provider>;\n};\n\nexport default Accordion;\n","// extracted by mini-css-extract-plugin\nexport default {\"accordionItem\":\"style_accordionItem__0VqFz\",\"opened\":\"style_opened__PKTW5\",\"accordionContent\":\"style_accordionContent__ICoPq\"};","import classNames from 'classnames';\nimport { FC, PropsWithChildren, useContext } from 'react';\nimport Icon from 'components/icon';\nimport { AccordionContext } from '.';\n\nimport style from './style.module.scss';\n\ninterface Prop extends PropsWithChildren {\n  id: string;\n  title: string;\n  className?: string;\n  collapsed?: boolean;\n}\n\nconst AccordionItem: FC<Prop> = ({ id, title, children, className, collapsed }) => {\n  const { active, toggleActive } = useContext(AccordionContext);\n  return (\n    <div className={classNames(style.accordionItem, 'card', className, { [style.opened]: active.includes(id) })}>\n      <header className=\"card-header\" onClick={() => toggleActive(id)}>\n        <p className=\"card-header-title\">{title}</p>\n        <button className=\"card-header-icon\" aria-label=\"more options\">\n          <Icon name=\"angle-down\" />\n        </button>\n      </header>\n      <div className={classNames(style.accordionContent, 'card-content')}>\n        <div className=\"content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AccordionItem;\n","import classNames from 'classnames';\nimport { enemies } from 'hooks/data';\nimport { FC, ReactNode } from 'react';\n\nimport style from './style.module.scss';\nimport AccordionItem from 'components/accordion/accordion-item';\nimport Accordion from 'components/accordion';\n\ntype Props = {\n  name: string;\n  onClose: () => void;\n};\n\nconst EnemyInformation: FC<Props> = ({ name, onClose }) => {\n  const enemy = enemies[name];\n  if (!enemy) {\n    return null;\n  }\n\n  return (\n    <div className={classNames(style.infoModal, 'modal is-active')}>\n      <div className=\"modal-background\" onClick={onClose} />\n      <div className=\"modal-content\">\n        <div className=\"box has-text-left\">\n          <div className={style.header}>\n            <figure className=\"image is-128x128\">\n              <img src={`/ffx-monster-arena/img/${enemy.img}`} alt=\"Enemy portrait\" />\n            </figure>\n\n            <div className=\"block\">\n              <p className=\"title is-4\">{name}</p>\n              <p className=\"subtitle\">{enemy.sensorDescription}</p>\n            </div>\n          </div>\n          <div className={style.information}>\n            <Accordion defaultItem=\"items\">\n              <AccordionItem id=\"scan_description\" title=\"Scan description\">\n                <p className=\"subtitle is-6\">{enemy.scanDescription}</p>\n              </AccordionItem>\n\n              <AccordionItem id=\"basic_information\" title=\"Basic information\">\n                <div className={style.sectionInformation}>\n                  <InfoSection title=\"Location\" description={enemy.location.map((location) => <span key={location}>{location}</span>)} />\n                  <InfoSection title=\"Species\" description={enemy.species} />\n                  <InfoSection title=\"Monster Arena\" description={enemy.monsterArena} />\n                  <InfoSection title=\"Other information\" description={enemy.otherInformation} />\n                </div>\n              </AccordionItem>\n\n              <AccordionItem id=\"stats\" title=\"Stats\">\n                <div className={style.sectionInformation}>\n                  {enemy.stats.map((item) => (\n                    <InfoSection\n                      key={item.name}\n                      title={item.name}\n                      description={\n                        !Array.isArray(item.values)\n                          ? item.values\n                          : item.values.map((elem) => <span key={`stats[${item.name}]_[${elem}]`}>{elem}</span>)\n                      }\n                    />\n                  ))}\n                </div>\n              </AccordionItem>\n\n              <AccordionItem id=\"items\" title=\"Items\">\n                <div className={style.sectionInformation}>\n                  {enemy.items.map((item) => (\n                    <InfoSection\n                      key={item.name}\n                      title={item.name}\n                      description={\n                        !Array.isArray(item.values)\n                          ? item.values\n                          : item.values.map((elem) => <span key={`items[${item.name}]_[${elem}]`}>{elem}</span>)\n                      }\n                    />\n                  ))}\n                </div>\n              </AccordionItem>\n\n              <AccordionItem id=\"elemental_affinities\" title=\"Elemental affinities\">\n                <div className={style.sectionInformation}>\n                  {enemy.elementalAffinities.map((item) => (\n                    <InfoSection\n                      key={item.name}\n                      title={item.name}\n                      description={\n                        !Array.isArray(item.values)\n                          ? item.values\n                          : item.values.map((elem) => <span key={`elemental_affinities[${item.name}]_[${elem}]`}>{elem}</span>)\n                      }\n                    />\n                  ))}\n                </div>\n              </AccordionItem>\n\n              <AccordionItem id=\"statuses_and_immunities\" title=\"Statuses and immunities\">\n                <div className={style.sectionInformation}>\n                  {enemy.statusesAndImmunities.map((item) => (\n                    <InfoSection\n                      key={item.name}\n                      title={item.name}\n                      description={\n                        !Array.isArray(item.values)\n                          ? item.values\n                          : item.values.map((elem) => <span key={`statuses_and_immunities[${item.name}]_[${elem}]`}>{elem}</span>)\n                      }\n                    />\n                  ))}\n                </div>\n              </AccordionItem>\n            </Accordion>\n          </div>\n        </div>\n      </div>\n      <button className=\"modal-close is-large\" aria-label=\"close\" onClick={onClose} />\n    </div>\n  );\n};\n\nconst InfoSection: FC<{ title: string; description: ReactNode }> = ({ title, description }) => (\n  <div className=\"block has-text-left\">\n    <p className=\"title is-5\">{title}</p>\n    <p className={classNames(style.sectionDescription, 'subtitle is-6')}>{description}</p>\n  </div>\n);\n\nexport default EnemyInformation;\n","import classNames from 'classnames';\nimport { breedLocations, enemies, specialConquests, species, unlocks } from 'hooks/data';\nimport { FC, useState } from 'react';\nimport { useKillCount } from 'hooks/use-kill-count';\nimport { Button } from 'components/button';\nimport EnemyInformation from './enemy-information';\n\nimport style from './style.module.scss';\n\ntype Props = {\n  location: string;\n  name: string;\n};\n\nconst Enemy: FC<Props> = ({ location, name }) => {\n  const [killCount, setKillCount] = useKillCount();\n  const [showInfo, setShowInfo] = useState(false);\n\n  const enemy = enemies[name];\n\n  if (!enemy) {\n    return <>Enemy not found!</>;\n  }\n\n  const kills = killCount.locations[enemy.monsterArena][name];\n\n  const unlock = unlocks[name];\n  const misplaced = enemy.monsterArena !== location;\n  const completed = (!unlock && kills === 10) || (unlock && kills === 1);\n\n  const toggleInfoModal = () => setShowInfo(!showInfo);\n\n  const changeKillCount = (value: number) => {\n    setKillCount((killCount) => {\n      // Change the direct capture\n      const val = killCount.locations[enemy.monsterArena][name] + value;\n      if (val >= 0 && val <= 10) {\n        killCount.locations[enemy.monsterArena][name] = val;\n        killCount.species[enemy.species][name] = val;\n      }\n\n      // Control the area unlocks\n      // For each breed location\n      breedLocations.forEach((area) => {\n        // For each enemy of that area\n        specialConquests[area].forEach((conquest) => {\n          const unlock = unlocks[conquest.enemy];\n\n          let passed = false;\n\n          if (unlock.condition.type === 'location') {\n            passed = specialConquests[unlock.condition.value].every(\n              (elem) => killCount.locations[elem.location][elem.enemy] >= unlock.condition.quantity\n            );\n          } else if (unlock.condition.type === 'capture') {\n            passed = species[unlock.condition.value].every((enemyName) => {\n              const enemy = enemies[enemyName];\n              return killCount.locations[enemy.monsterArena][enemyName] >= unlock.condition.quantity;\n            });\n          } else if (unlock.condition.type === 'breed') {\n            const filteredList = specialConquests[unlock.condition.value].filter(\n              (conquest) => killCount.locations[unlock.condition.value][conquest.enemy] > 0\n            );\n            passed = filteredList.length >= unlock.condition.quantity;\n          }\n\n          killCount.locations[area][conquest.enemy] = passed ? 1 : 0;\n        });\n      });\n    });\n  };\n\n  return (\n    <>\n      <div\n        className={classNames(style.enemy, 'box', {\n          [style.misplaced]: misplaced\n        })}\n      >\n        {completed && (\n          <span className={classNames(style.check, 'icon is-small')}>\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n        <img\n          className={style.portrait}\n          src={`/ffx-monster-arena/img/${enemy.img}`}\n          alt=\"Enemy portrait\"\n          onClick={toggleInfoModal}\n          onKeyUp={toggleInfoModal}\n        />\n        <div className={style.information}>\n          <h5 className=\"title is-5 is-spaced\">{name}</h5>\n          {unlock ? (\n            <p className=\"subtitle is-6\">{unlock.description}</p>\n          ) : (\n            <div className={style.killcount}>\n              <Button className={style.minusButton} onClick={() => changeKillCount(-1)}>\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-minus\" />\n                </span>\n              </Button>\n              <div className={style.progress}>\n                <span className={classNames(style.label, 'subtitle')}>{kills}</span>\n                <progress className=\"progress is-primary\" value={kills} max=\"10\">\n                  {kills}\n                </progress>\n              </div>\n              <Button className={style.plusButton} onClick={() => changeKillCount(1)}>\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-plus\" />\n                </span>\n              </Button>\n            </div>\n          )}\n        </div>\n      </div>\n      {showInfo && <EnemyInformation name={name} onClose={toggleInfoModal} />}\n    </>\n  );\n};\n\nexport default Enemy;\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { conquests } from 'hooks/data';\nimport Enemy from './_components/enemy';\n\nconst LocationDetails: FC = () => {\n  const { locationId = '' } = useParams();\n\n  return (\n    <div className=\"container has-text-centered\">\n      <div className=\"columns is-multiline is-3\">\n        {conquests[locationId].map((enamyName) => (\n          <div key={enamyName} className=\"column is-one-third-desktop is-half-tablet\">\n            <Enemy location={locationId} name={enamyName} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LocationDetails;\n"],"names":["AccordionContext","React","active","toggleActive","_ref","defaultItem","children","_useState","useState","_useState2","_slicedToArray","setActive","useMemo","key","current","includes","filter","id","concat","_toConsumableArray","_jsx","Provider","value","title","className","_useContext","collapsed","useContext","_jsxs","classNames","style","_defineProperty","onClick","Icon","name","InfoSection","_ref2","description","onClose","enemy","enemies","src","img","alt","sensorDescription","Accordion","AccordionItem","scanDescription","location","map","species","monsterArena","otherInformation","stats","item","Array","isArray","values","elem","items","elementalAffinities","statusesAndImmunities","_useKillCount","useKillCount","_useKillCount2","killCount","setKillCount","showInfo","setShowInfo","_Fragment","kills","locations","unlock","unlocks","misplaced","completed","toggleInfoModal","changeKillCount","val","breedLocations","area","specialConquests","forEach","conquest","passed","condition","type","every","quantity","enemyName","filteredList","length","onKeyUp","Button","max","EnemyInformation","_useParams$locationId","useParams","locationId","conquests","enamyName","Enemy"],"sourceRoot":""}